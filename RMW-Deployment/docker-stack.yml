version: '3.8'

services:
  rmw_deployment:
    image: steelduck1/rmw-deployment:latest
    ports:
      - "8080:8080"
    environment:
      - DEPLOY_API_KEY=Belastingdienst321!
      - DOCKER_USERNAME=steelduck1
      - DOCKER_PASSWORD=dckr_pat_31ZfA-0SCQzQiJxY2Vfw9Tjau_0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
    networks:
      - rmw-network

  rmw_frontend:
    image: steelduck1/rmw-frontend:latest
    ports:
      - "80:8000"
    environment:
      - DATABASE_API_URL=http://rmw_database:8002
      - ORIGINAL_API_URL=http://rmw_backend:8001
    deploy:
      replicas: 2
      restart_policy:
        condition: any
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
    networks:
      - rmw-network

  rmw_backend:
    image: steelduck1/rmw-backend:latest
    ports:
      - "8001:8001"
    environment:
      - DATABASE_API_URL=http://rmw_database:8002
    deploy:
      replicas: 2
      restart_policy:
        condition: any
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
    networks:
      - rmw-network
    depends_on:
      - rmw_database

  rmw_database:
    image: steelduck1/rmw-database:latest
    ports:
      - "8002:8002"
    environment:
      - SQLITE_CONNECTION_PARAMS=check_same_thread=False
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
    volumes:
      - rmw_database_data:/app/data
    networks:
      - rmw-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ../RMW-Monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
    networks:
      - rmw-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ../RMW-Monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=ReachMyWeight321
      - GF_USERS_ALLOW_SIGN_UP=false
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
    networks:
      - rmw-network
    depends_on:
      - prometheus

  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - ../RMW-Monitoring/node-exporter/config.yml:/etc/node-exporter/config.yml
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    deploy:
      mode: global
      restart_policy:
        condition: any
    networks:
      - rmw-network

networks:
  rmw-network:
    driver: overlay

volumes:
  rmw_database_data:
  prometheus_data:
  grafana_data:
